{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2f0e6633\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"layout-topbar d-flex justify-content-between\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  to: \"/\",\n  class: \"layout-topbar-logo\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"/img/icons/favicon.png\",\n  alt: \"logo\"\n}), /*#__PURE__*/_createElementVNode(\"span\", null, \"Onson Mail\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-bars\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-ellipsis-v\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-sign-in\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-sign-out\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Dropdown = _resolveComponent(\"Dropdown\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    class: \"p-link layout-menu-button layout-topbar-button\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.onMenuToggle())\n  }, _hoisted_4), _createElementVNode(\"button\", {\n    class: \"p-link layout-topbar-menu-button layout-topbar-button ml-2\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.onTopBarMenuButton())\n  }, _hoisted_6), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"layout-topbar-menu m-0\", $options.topbarMenuClasses])\n  }, [_createVNode(_component_Dropdown, {\n    class: \"ml-3\",\n    options: $options.language_menu_items,\n    optionLabel: \"lang\",\n    optionValue: \"code\",\n    \"model-value\": $props.lang,\n    onChange: $options.language_change,\n    inputStyle: \"padding: 1rem\"\n  }, null, 8 /* PROPS */, [\"options\", \"model-value\", \"onChange\"]), !$options.is_auth ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[2] || (_cache[2] = $event => $options.onNavbarLoginButton()),\n    class: \"p-link layout-topbar-button m-auto\"\n  }, [_hoisted_7, _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t(\"Войти\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $options.is_auth ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[3] || (_cache[3] = $event => $options.onNavbarLogoutButton()),\n    class: \"p-link layout-topbar-button m-auto\"\n  }, [_hoisted_8, _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t(\"Выйти\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)]);\n}","map":{"version":3,"mappings":";;;EAkHOA,KAAK,EAAC;AAA8C;gEAEvDC,oBAIM;EAJDC,EAAE,EAAC,GAAG;EAACF,KAAK,EAAC;iBAEdC,oBAA+C;EAA1CE,GAAG,EAAC,wBAAwB;EAACC,GAAG,EAAC;iBACtCH,oBAAuB,cAAjB,YAAU;gEAIhBA,oBAA0B;EAAvBD,KAAK,EAAC;AAAY;oBAArBK,UAA0B;gEAI5BJ,oBAAgC;EAA7BD,KAAK,EAAC;AAAkB;oBAA3BM,UAAgC;gEAS9BL,oBAA6B;EAA1BD,KAAK,EAAC;AAAe;gEAIxBC,oBAA8B;EAA3BD,KAAK,EAAC;AAAgB;;;;uBA1B/BO,oBA8BM,OA9BNC,UA8BM,GA5BJC,UAIM,EAENR,oBAES;IAFDD,KAAK,EAAC,gDAAgD;IAAEU,OAAK,sCAAEC,qBAAY;kBAInFV,oBAES;IAFDD,KAAK,EAAC,4DAA4D;IAAEU,OAAK,sCAAEC,2BAAkB;kBAIrGV,oBAaM;IAbDD,KAAK,mBAAC,wBAAwB,EAASW,0BAAiB;MAC3DC,aAGEC;IAHQb,KAAK,EAAC,MAAM;IAAEc,OAAO,EAAEH,4BAAmB;IAAEI,WAAW,EAAC,MAAM;IAC9DC,WAAW,EAAC,MAAM;IAAE,aAAW,EAAEC,WAAI;IACpCC,QAAM,EAAEP,wBAAe;IAAEQ,UAAU,EAAC;oEAEhCR,gBAAO,kBAAtBJ,oBAGS;;IAHgBG,OAAK,sCAAEC,4BAAmB;IAAIX,KAAK,EAAC;MAC3DoB,UAA6B,EAC7BnB,oBAA8B,+BAArBoB,OAAE,kEAECV,gBAAO,kBAArBJ,oBAGS;;IAHeG,OAAK,sCAAEC,6BAAoB;IAAIX,KAAK,EAAC;MAC3DsB,UAA8B,EAC9BrB,oBAA8B,+BAArBoB,OAAE","names":["class","_createElementVNode","to","src","alt","_hoisted_3","_hoisted_5","_createElementBlock","_hoisted_1","_hoisted_2","onClick","$options","_createVNode","_component_Dropdown","options","optionLabel","optionValue","$props","onChange","inputStyle","_hoisted_7","_ctx","_hoisted_8"],"sourceRoot":"","sources":["/app/src/layout/AppTopbar.vue"],"sourcesContent":["<script>\r\nimport router from \"@/router\";\r\nimport {useLayout} from '@/layout/composables/layout';\r\nimport store from \"@/store\";\r\nconst {changeThemeSettings ,onMenuToggle, layoutConfig} = useLayout();\r\n\r\nexport default {\r\n  props: ['lang'],\r\n  data() {\r\n    this.$i18n.locale = this.lang\r\n    return {\r\n      outsideClickListener: null,\r\n      topbarMenuActive: false,\r\n      mode_chack: false,\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.mode_chack = window.matchMedia(\"(prefers-color-scheme:dark)\").matches\r\n    this.bindOutsideClickListener();\r\n    this.darkMode = false\r\n  },\r\n  beforeUnmount() {\r\n    this.unbindOutsideClickListener();\r\n  },\r\n  methods: {\r\n    onMenuToggle,\r\n    onTopBarMenuButton() {\r\n      this.topbarMenuActive = !this.topbarMenuActive;\r\n    },\r\n    onSettingsClick() {\r\n      this.topbarMenuActive = false;\r\n      router.push({'name': 'settings'});\r\n    },\r\n    bindOutsideClickListener() {\r\n      if (!this.outsideClickListener) {\r\n        this.outsideClickListener = (event) => {\r\n          if (this.isOutsideClicked(event)) {\r\n            this.topbarMenuActive = false;\r\n          }\r\n        };\r\n        document.addEventListener('click', this.outsideClickListener);\r\n      }\r\n    },\r\n    unbindOutsideClickListener() {\r\n      if (this.outsideClickListener) {\r\n        document.removeEventListener('click', this.outsideClickListener);\r\n        this.outsideClickListener = null;\r\n      }\r\n    },\r\n    isOutsideClicked(event) {\r\n      if (!this.topbarMenuActive) return;\r\n\r\n      const sidebarEl = document.querySelector('.layout-topbar-menu');\r\n      const topbarEl = document.querySelector('.layout-topbar-menu-button');\r\n\r\n      return !(sidebarEl.isSameNode(event.target) || sidebarEl.contains(event.target) || topbarEl.isSameNode(event.target) || topbarEl.contains(event.target));\r\n    },\r\n    language_change(e) {\r\n      const params = {...this.$route.params}\r\n      params.lang = e.value\r\n      this.$router.push({'name': this.$route.name, params, query: this.$route.query})\r\n      this.$i18n.locale = e.value\r\n      this.$i18n.fallbackLocale = e.value\r\n    },\r\n\r\n    onChangeTheme () {\r\n    const mode = this.darkMode\r\n    // store.commit('basic', {key: 'darkMode', value: !mode})\r\n    const theme = mode ? 'lara-light-indigo' : 'lara-dark-indigo'\r\n    const elementId = 'theme-css';\r\n    const linkElement = document.getElementById(elementId);\r\n    const cloneLinkElement = linkElement.cloneNode(true);\r\n    const newThemeUrl = linkElement.getAttribute('href').replace(layoutConfig.theme.value, theme);\r\n    cloneLinkElement.setAttribute('id', elementId + '-clone');\r\n    cloneLinkElement.setAttribute('href', newThemeUrl);\r\n    cloneLinkElement.addEventListener('load', () => {\r\n        linkElement.remove();\r\n        cloneLinkElement.setAttribute('id', elementId);\r\n        changeThemeSettings(theme, mode);\r\n    });\r\n    linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n  },\r\n  async onNavbarLogoutButton() {\r\n      store.commit('basic', {key: 'token', value: ''})\r\n      localStorage.removeItem('access')\r\n      localStorage.removeItem('refresh')\r\n      await this.$router.push({name: 'login'})\r\n    },\r\n    async onNavbarLoginButton() {\r\n      await this.$router.push({name: 'login'})\r\n    }\r\n  },\r\n  computed: {\r\n    topbarMenuClasses() {\r\n      return {\r\n        'layout-topbar-menu-mobile-active': this.topbarMenuActive\r\n      };\r\n    },\r\n    language_menu_items: () => store.getters.get_languages,\r\n    selected_lang: () => store.getters.get_selected_lang,\r\n    logo_panel() {\r\n        return true ? this.navbar_icon_1 : this.navbar_icon_1_dark\r\n    },\r\n    logo_city() {\r\n      return true ? this.navbar_icon_2 : this.navbar_icon_2_dark\r\n    },  \r\n    darkMode: () => store.state.darkMode,\r\n    is_auth: () => store.state.token,\r\n    navbar_items() {return []\r\n  }}\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"layout-topbar d-flex justify-content-between\">\r\n\r\n    <div to=\"/\" class=\"layout-topbar-logo\">\r\n      \r\n        <img src=\"/img/icons/favicon.png\" alt=\"logo\" />\r\n        <span>Onson Mail</span>\r\n    </div>\r\n\r\n    <button class=\"p-link layout-menu-button layout-topbar-button\" @click=\"onMenuToggle()\">\r\n        <i class=\"pi pi-bars\"></i>\r\n    </button>\r\n\r\n    <button class=\"p-link layout-topbar-menu-button layout-topbar-button ml-2\" @click=\"onTopBarMenuButton()\">\r\n      <i class=\"pi pi-ellipsis-v\"></i>\r\n    </button>\r\n\r\n    <div class=\"layout-topbar-menu m-0\" :class=\"topbarMenuClasses\">\r\n      <Dropdown class=\"ml-3\" :options=\"language_menu_items\" optionLabel=\"lang\"\r\n                optionValue=\"code\" :model-value=\"lang\"\r\n                @change=\"language_change\" inputStyle=\"padding: 1rem\"\r\n      />\r\n      <button v-if=\"!is_auth\" @click=\"onNavbarLoginButton()\" class=\"p-link layout-topbar-button m-auto\">\r\n        <i class=\"pi pi-sign-in\"></i>\r\n        <span>{{ $t(\"Войти\") }}</span>\r\n      </button>\r\n      <button v-if=\"is_auth\" @click=\"onNavbarLogoutButton()\" class=\"p-link layout-topbar-button m-auto\">\r\n        <i class=\"pi pi-sign-out\"></i>\r\n        <span>{{ $t(\"Выйти\") }}</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.navbar-logo-text {\r\n  font-size: 0.7rem;\r\n  margin: 0 !important;\r\n  max-width: 70px;\r\n  color: var(--surface-900);\r\n}\r\n\r\n.navbar-logo {\r\n  height: 9rem;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}