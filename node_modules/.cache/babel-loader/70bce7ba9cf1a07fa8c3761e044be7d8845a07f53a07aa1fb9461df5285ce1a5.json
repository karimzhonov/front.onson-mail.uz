{"ast":null,"code":"import { useLayout } from '@/layout/composables/layout';\nimport { useI18n } from \"vue-i18n\";\nconst {\n  layoutConfig,\n  layoutState,\n  setActiveMenuItem,\n  onMenuToggle\n} = useLayout();\nexport default {\n  name: 'AppMenuItem',\n  setup() {\n    const {\n      t\n    } = useI18n();\n    return {\n      t\n    };\n  },\n  data() {\n    return {\n      isActiveMenu: false,\n      itemKey: null\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      default: () => ({})\n    },\n    index: {\n      type: Number,\n      default: 0\n    },\n    root: {\n      type: Boolean,\n      default: true\n    },\n    parentItemKey: {\n      type: String,\n      default: null\n    }\n  },\n  beforeMount() {\n    this.itemKey = this.parentItemKey ? this.parentItemKey + '-' + this.index : String(this.index);\n    const activeItem = layoutState.activeMenuItem;\n    this.isActiveMenu = activeItem === this.itemKey || activeItem ? activeItem.startsWith(this.itemKey + '-') : false;\n  },\n  methods: {\n    itemClick(e, item) {\n      if (item.disabled) {\n        e.preventDefault();\n        return;\n      }\n      const {\n        overlayMenuActive,\n        staticMenuMobileActive\n      } = layoutState;\n      if ((item.to || item.url) && (staticMenuMobileActive.value || overlayMenuActive.value)) {\n        onMenuToggle();\n      }\n      if (item.command) {\n        item.command({\n          originalEvent: e,\n          item: item\n        });\n      }\n      const foundItemKey = item.items ? this.isActiveMenu ? props.parentItemKey : this.itemKey : this.itemKey;\n      setActiveMenuItem(foundItemKey);\n    },\n    checkActiveRoute(item) {\n      return this.$route === item.to;\n    }\n  }\n};\n\n// watch(\n//     () => layoutConfig.activeMenuItem.value,\n//     (newVal) => {\n//       isActiveMenu.value = newVal === itemKey.value || newVal.startsWith(itemKey.value + '-');\n//     }\n// );","map":{"version":3,"mappings":"AACA,SAAQA,SAAS,QAAO,6BAA6B;AACrD,SAAQC,OAAO,QAAO,UAAU;AAEhC,MAAM;EAACC,YAAY;EAAEC,WAAW;EAAEC,iBAAiB;EAAEC;AAAY,IAAIL,SAAS,EAAE;AAEhF,eAAe;EACbM,IAAI,EAAE,aAAa;EACnBC,KAAK,GAAG;IACN,MAAM;MAACC;IAAC,IAAIP,OAAO,EAAC;IACpB,OAAO;MAACO;IAAC;EACX,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,OAAO,CAAC,CAAC;IACpB,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX,CAAC;IACDG,IAAI,EAAE;MACJL,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE;IACX,CAAC;IACDK,aAAa,EAAE;MACbP,IAAI,EAAEQ,MAAM;MACZN,OAAO,EAAE;IACX;EACF,CAAC;EACDO,WAAW,GAAG;IACZ,IAAI,CAACZ,OAAM,GAAI,IAAI,CAACU,aAAY,GAAI,IAAI,CAACA,aAAY,GAAI,GAAE,GAAI,IAAI,CAACJ,KAAI,GAAIK,MAAM,CAAC,IAAI,CAACL,KAAK,CAAC;IAE9F,MAAMO,UAAS,GAAIrB,WAAW,CAACsB,cAAc;IAE7C,IAAI,CAACf,YAAW,GAAIc,UAAS,KAAM,IAAI,CAACb,OAAM,IAAKa,UAAS,GAAIA,UAAU,CAACE,UAAU,CAAC,IAAI,CAACf,OAAM,GAAI,GAAG,IAAI,KAAK;EACnH,CAAC;EACDgB,OAAO,EAAE;IACPC,SAAS,CAACC,CAAC,EAAEhB,IAAI,EAAE;MACjB,IAAIA,IAAI,CAACiB,QAAQ,EAAE;QACjBD,CAAC,CAACE,cAAc,EAAE;QAClB;MACF;MAEA,MAAM;QAACC,iBAAiB;QAAEC;MAAsB,IAAI9B,WAAW;MAE/D,IAAI,CAACU,IAAI,CAACqB,EAAC,IAAKrB,IAAI,CAACsB,GAAG,MAAMF,sBAAsB,CAACG,KAAI,IAAKJ,iBAAiB,CAACI,KAAK,CAAC,EAAE;QACtF/B,YAAY,EAAE;MAChB;MAEA,IAAIQ,IAAI,CAACwB,OAAO,EAAE;QAChBxB,IAAI,CAACwB,OAAO,CAAC;UAACC,aAAa,EAAET,CAAC;UAAEhB,IAAI,EAAEA;QAAI,CAAC,CAAC;MAC9C;MAEA,MAAM0B,YAAW,GAAI1B,IAAI,CAAC2B,KAAI,GAAK,IAAI,CAAC9B,YAAW,GAAIE,KAAK,CAACS,aAAY,GAAI,IAAI,CAACV,OAAO,GAAI,IAAI,CAACA,OAAO;MAEzGP,iBAAiB,CAACmC,YAAY,CAAC;IACjC,CAAC;IACDE,gBAAgB,CAAC5B,IAAI,EAAE;MACrB,OAAO,IAAI,CAAC6B,MAAK,KAAM7B,IAAI,CAACqB,EAAE;IAChC;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA","names":["useLayout","useI18n","layoutConfig","layoutState","setActiveMenuItem","onMenuToggle","name","setup","t","data","isActiveMenu","itemKey","props","item","type","Object","default","index","Number","root","Boolean","parentItemKey","String","beforeMount","activeItem","activeMenuItem","startsWith","methods","itemClick","e","disabled","preventDefault","overlayMenuActive","staticMenuMobileActive","to","url","value","command","originalEvent","foundItemKey","items","checkActiveRoute","$route"],"sourceRoot":"","sources":["/app/src/layout/AppMenuItem.vue"],"sourcesContent":["<script>\r\nimport {useLayout} from '@/layout/composables/layout';\r\nimport {useI18n} from \"vue-i18n\";\r\n\r\nconst {layoutConfig, layoutState, setActiveMenuItem, onMenuToggle} = useLayout();\r\n\r\nexport default {\r\n  name: 'AppMenuItem',\r\n  setup() {\r\n    const {t} = useI18n()\r\n    return {t}\r\n  },\r\n  data() {\r\n    return {\r\n      isActiveMenu: false,\r\n      itemKey: null,\r\n    }\r\n  },\r\n  props: {\r\n    item: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    index: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    root: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    parentItemKey: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.itemKey = this.parentItemKey ? this.parentItemKey + '-' + this.index : String(this.index);\r\n\r\n    const activeItem = layoutState.activeMenuItem;\r\n\r\n    this.isActiveMenu = activeItem === this.itemKey || activeItem ? activeItem.startsWith(this.itemKey + '-') : false;\r\n  },\r\n  methods: {\r\n    itemClick(e, item) {\r\n      if (item.disabled) {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n\r\n      const {overlayMenuActive, staticMenuMobileActive} = layoutState;\r\n\r\n      if ((item.to || item.url) && (staticMenuMobileActive.value || overlayMenuActive.value)) {\r\n        onMenuToggle();\r\n      }\r\n\r\n      if (item.command) {\r\n        item.command({originalEvent: e, item: item});\r\n      }\r\n\r\n      const foundItemKey = item.items ? (this.isActiveMenu ? props.parentItemKey : this.itemKey) : this.itemKey;\r\n\r\n      setActiveMenuItem(foundItemKey);\r\n    },\r\n    checkActiveRoute(item) {\r\n      return this.$route === item.to;\r\n    }\r\n  }\r\n}\r\n\r\n// watch(\r\n//     () => layoutConfig.activeMenuItem.value,\r\n//     (newVal) => {\r\n//       isActiveMenu.value = newVal === itemKey.value || newVal.startsWith(itemKey.value + '-');\r\n//     }\r\n// );\r\n\r\n</script>\r\n\r\n<template>\r\n  <li :class=\"{ 'layout-root-menuitem': root, 'active-menuitem': isActiveMenu }\" class=\"text-decoration-none\">\r\n    <div v-if=\"root && item.visible !== false\" class=\"layout-menuitem-root-text\">{{ $t(item.label) }}</div>\r\n    <a v-if=\"(!item.to || item.items) && item.visible !== false\" :href=\"item.url\"\r\n       @click=\"itemClick($event, item, index)\" :class=\"item.class\" :target=\"item.target\" tabindex=\"0\">\r\n      <i :class=\"item.icon\" class=\"layout-menuitem-icon\"></i>\r\n      <span class=\"layout-menuitem-text\">{{ $t(item.label) }}</span>\r\n      <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" v-if=\"item.items\"></i>\r\n    </a>\r\n    <router-link v-if=\"item.to && !item.items && item.visible !== false\" @click=\"itemClick($event, item, index)\"\r\n                 :class=\"[item.class, { 'active-route': checkActiveRoute(item) }]\" tabindex=\"0\" :to=\"item.to\">\r\n      <i :class=\"item.icon\" class=\"layout-menuitem-icon\"></i>\r\n      <span class=\"layout-menuitem-text\">{{ $t(item.label) }}</span>\r\n      <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" v-if=\"item.items\"></i>\r\n    </router-link>\r\n    <Transition v-if=\"item.items && item.visible !== false\" name=\"layout-submenu\">\r\n      <ul v-show=\"root ? true : isActiveMenu\" class=\"layout-submenu\">\r\n        <template v-for=\"(child, i) in item.items\" :key=\"child\">\r\n          <app-menu-item v-if=\"!item.not_show\" :index=\"i\" :item=\"child\" :parentItemKey=\"itemKey\"\r\n                         :root=\"false\"></app-menu-item>\r\n        </template>\r\n\r\n      </ul>\r\n    </Transition>\r\n  </li>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}