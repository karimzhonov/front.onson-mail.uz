{"ast":null,"code":"import { UniqueComponentId, DomHandler } from 'primevue/utils';\nconst BadgeDirective = {\n  beforeMount(el, options) {\n    const id = UniqueComponentId() + '_badge';\n    el.$_pbadgeId = id;\n    let badge = document.createElement('span');\n    badge.id = id;\n    badge.className = 'p-badge p-component';\n    for (let modifier in options.modifiers) {\n      DomHandler.addClass(badge, 'p-badge-' + modifier);\n    }\n    if (options.value != null) {\n      badge.appendChild(document.createTextNode(options.value));\n      if (String(options.value).length === 1) {\n        DomHandler.addClass(badge, 'p-badge-no-gutter');\n      }\n    } else {\n      DomHandler.addClass(badge, 'p-badge-dot');\n    }\n    DomHandler.addClass(el, 'p-overlay-badge');\n    el.appendChild(badge);\n  },\n  updated(el, options) {\n    DomHandler.addClass(el, 'p-overlay-badge');\n    if (options.oldValue !== options.value) {\n      let badge = document.getElementById(el.$_pbadgeId);\n      if (options.value) {\n        if (DomHandler.hasClass(badge, 'p-badge-dot')) {\n          DomHandler.removeClass(badge, 'p-badge-dot');\n        }\n        if (String(options.value).length === 1) DomHandler.addClass(badge, 'p-badge-no-gutter');else DomHandler.removeClass(badge, 'p-badge-no-gutter');\n      } else if (!options.value && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n        DomHandler.addClass(badge, 'p-badge-dot');\n      }\n      badge.innerHTML = '';\n      badge.appendChild(document.createTextNode(options.value));\n    }\n  }\n};\nexport { BadgeDirective as default };","map":{"version":3,"names":["UniqueComponentId","DomHandler","BadgeDirective","beforeMount","el","options","id","$_pbadgeId","badge","document","createElement","className","modifier","modifiers","addClass","value","appendChild","createTextNode","String","length","updated","oldValue","getElementById","hasClass","removeClass","innerHTML","default"],"sources":["/node_modules/primevue/badgedirective/badgedirective.esm.js"],"sourcesContent":["import { UniqueComponentId, DomHandler } from 'primevue/utils';\n\nconst BadgeDirective = {\n    beforeMount(el, options) {\n        const id = UniqueComponentId() + '_badge';\n\n        el.$_pbadgeId = id;\n\n        let badge = document.createElement('span');\n\n        badge.id = id;\n        badge.className = 'p-badge p-component';\n\n        for (let modifier in options.modifiers) {\n            DomHandler.addClass(badge, 'p-badge-' + modifier);\n        }\n\n        if (options.value != null) {\n            badge.appendChild(document.createTextNode(options.value));\n\n            if (String(options.value).length === 1) {\n                DomHandler.addClass(badge, 'p-badge-no-gutter');\n            }\n        } else {\n            DomHandler.addClass(badge, 'p-badge-dot');\n        }\n\n        DomHandler.addClass(el, 'p-overlay-badge');\n        el.appendChild(badge);\n    },\n    updated(el, options) {\n        DomHandler.addClass(el, 'p-overlay-badge');\n\n        if (options.oldValue !== options.value) {\n            let badge = document.getElementById(el.$_pbadgeId);\n\n            if (options.value) {\n                if (DomHandler.hasClass(badge, 'p-badge-dot')) {\n                    DomHandler.removeClass(badge, 'p-badge-dot');\n                }\n\n                if (String(options.value).length === 1) DomHandler.addClass(badge, 'p-badge-no-gutter');\n                else DomHandler.removeClass(badge, 'p-badge-no-gutter');\n            } else if (!options.value && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n                DomHandler.addClass(badge, 'p-badge-dot');\n            }\n\n            badge.innerHTML = '';\n            badge.appendChild(document.createTextNode(options.value));\n        }\n    }\n};\n\nexport { BadgeDirective as default };\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,UAAU,QAAQ,gBAAgB;AAE9D,MAAMC,cAAc,GAAG;EACnBC,WAAW,CAACC,EAAE,EAAEC,OAAO,EAAE;IACrB,MAAMC,EAAE,GAAGN,iBAAiB,EAAE,GAAG,QAAQ;IAEzCI,EAAE,CAACG,UAAU,GAAGD,EAAE;IAElB,IAAIE,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAE1CF,KAAK,CAACF,EAAE,GAAGA,EAAE;IACbE,KAAK,CAACG,SAAS,GAAG,qBAAqB;IAEvC,KAAK,IAAIC,QAAQ,IAAIP,OAAO,CAACQ,SAAS,EAAE;MACpCZ,UAAU,CAACa,QAAQ,CAACN,KAAK,EAAE,UAAU,GAAGI,QAAQ,CAAC;IACrD;IAEA,IAAIP,OAAO,CAACU,KAAK,IAAI,IAAI,EAAE;MACvBP,KAAK,CAACQ,WAAW,CAACP,QAAQ,CAACQ,cAAc,CAACZ,OAAO,CAACU,KAAK,CAAC,CAAC;MAEzD,IAAIG,MAAM,CAACb,OAAO,CAACU,KAAK,CAAC,CAACI,MAAM,KAAK,CAAC,EAAE;QACpClB,UAAU,CAACa,QAAQ,CAACN,KAAK,EAAE,mBAAmB,CAAC;MACnD;IACJ,CAAC,MAAM;MACHP,UAAU,CAACa,QAAQ,CAACN,KAAK,EAAE,aAAa,CAAC;IAC7C;IAEAP,UAAU,CAACa,QAAQ,CAACV,EAAE,EAAE,iBAAiB,CAAC;IAC1CA,EAAE,CAACY,WAAW,CAACR,KAAK,CAAC;EACzB,CAAC;EACDY,OAAO,CAAChB,EAAE,EAAEC,OAAO,EAAE;IACjBJ,UAAU,CAACa,QAAQ,CAACV,EAAE,EAAE,iBAAiB,CAAC;IAE1C,IAAIC,OAAO,CAACgB,QAAQ,KAAKhB,OAAO,CAACU,KAAK,EAAE;MACpC,IAAIP,KAAK,GAAGC,QAAQ,CAACa,cAAc,CAAClB,EAAE,CAACG,UAAU,CAAC;MAElD,IAAIF,OAAO,CAACU,KAAK,EAAE;QACf,IAAId,UAAU,CAACsB,QAAQ,CAACf,KAAK,EAAE,aAAa,CAAC,EAAE;UAC3CP,UAAU,CAACuB,WAAW,CAAChB,KAAK,EAAE,aAAa,CAAC;QAChD;QAEA,IAAIU,MAAM,CAACb,OAAO,CAACU,KAAK,CAAC,CAACI,MAAM,KAAK,CAAC,EAAElB,UAAU,CAACa,QAAQ,CAACN,KAAK,EAAE,mBAAmB,CAAC,CAAC,KACnFP,UAAU,CAACuB,WAAW,CAAChB,KAAK,EAAE,mBAAmB,CAAC;MAC3D,CAAC,MAAM,IAAI,CAACH,OAAO,CAACU,KAAK,IAAI,CAACd,UAAU,CAACsB,QAAQ,CAACf,KAAK,EAAE,aAAa,CAAC,EAAE;QACrEP,UAAU,CAACa,QAAQ,CAACN,KAAK,EAAE,aAAa,CAAC;MAC7C;MAEAA,KAAK,CAACiB,SAAS,GAAG,EAAE;MACpBjB,KAAK,CAACQ,WAAW,CAACP,QAAQ,CAACQ,cAAc,CAACZ,OAAO,CAACU,KAAK,CAAC,CAAC;IAC7D;EACJ;AACJ,CAAC;AAED,SAASb,cAAc,IAAIwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}