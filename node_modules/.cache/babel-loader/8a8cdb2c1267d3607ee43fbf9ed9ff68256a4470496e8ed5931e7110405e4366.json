{"ast":null,"code":"import { toRefs, reactive, computed } from 'vue';\nconst contextPath = process.env.VUE_APP_BASE_URL;\nconst layoutConfig = reactive({\n  ripple: false,\n  darkTheme: window.matchMedia(\"(prefers-color-scheme:dark)\").matches,\n  inputStyle: 'outlined',\n  menuMode: 'static',\n  theme: window.matchMedia(\"(prefers-color-scheme:dark)\").matches ? 'lara-dark-indigo' : 'lara-light-indigo',\n  scale: 14,\n  activeMenuItem: null,\n  loading: true\n});\nconst layoutState = reactive({\n  staticMenuDesktopInactive: false,\n  overlayMenuActive: false,\n  profileSidebarVisible: false,\n  configSidebarVisible: false,\n  staticMenuMobileActive: false,\n  menuHoverActive: false\n});\nexport function useLayout() {\n  const changeThemeSettings = (theme, darkTheme) => {\n    layoutConfig.darkTheme = darkTheme;\n    layoutConfig.theme = theme;\n  };\n  const setScale = scale => {\n    layoutConfig.scale = scale;\n  };\n  const setActiveMenuItem = item => {\n    layoutConfig.activeMenuItem = item.value || item;\n  };\n  const onMenuToggle = () => {\n    if (layoutConfig.menuMode === 'overlay') {\n      layoutState.overlayMenuActive = !layoutState.overlayMenuActive;\n    }\n    if (window.innerWidth > 991) {\n      layoutState.staticMenuDesktopInactive = !layoutState.staticMenuDesktopInactive;\n    } else {\n      layoutState.staticMenuMobileActive = !layoutState.staticMenuMobileActive;\n    }\n  };\n  const isSidebarActive = computed(() => layoutState.overlayMenuActive || layoutState.staticMenuMobileActive);\n  const isDarkTheme = computed(() => layoutConfig.darkTheme);\n  return {\n    contextPath,\n    layoutConfig: toRefs(layoutConfig),\n    layoutState: toRefs(layoutState),\n    changeThemeSettings,\n    setScale,\n    onMenuToggle,\n    isSidebarActive,\n    isDarkTheme,\n    setActiveMenuItem\n  };\n}","map":{"version":3,"names":["toRefs","reactive","computed","contextPath","process","env","VUE_APP_BASE_URL","layoutConfig","ripple","darkTheme","window","matchMedia","matches","inputStyle","menuMode","theme","scale","activeMenuItem","loading","layoutState","staticMenuDesktopInactive","overlayMenuActive","profileSidebarVisible","configSidebarVisible","staticMenuMobileActive","menuHoverActive","useLayout","changeThemeSettings","setScale","setActiveMenuItem","item","value","onMenuToggle","innerWidth","isSidebarActive","isDarkTheme"],"sources":["/app/src/layout/composables/layout.js"],"sourcesContent":["import { toRefs, reactive, computed } from 'vue';\r\n\r\nconst contextPath = process.env.VUE_APP_BASE_URL;\r\nconst layoutConfig = reactive({\r\n    ripple: false,\r\n    darkTheme: window.matchMedia(\"(prefers-color-scheme:dark)\").matches,\r\n    inputStyle: 'outlined',\r\n    menuMode: 'static',\r\n    theme: window.matchMedia(\"(prefers-color-scheme:dark)\").matches ? 'lara-dark-indigo' : 'lara-light-indigo',\r\n    scale: 14,\r\n    activeMenuItem: null,\r\n    loading: true,\r\n});\r\n\r\nconst layoutState = reactive({\r\n    staticMenuDesktopInactive: false,\r\n    overlayMenuActive: false,\r\n    profileSidebarVisible: false,\r\n    configSidebarVisible: false,\r\n    staticMenuMobileActive: false,\r\n    menuHoverActive: false\r\n});\r\n\r\nexport function useLayout() {\r\n    const changeThemeSettings = (theme, darkTheme) => {\r\n        layoutConfig.darkTheme = darkTheme;\r\n        layoutConfig.theme = theme;\r\n    };\r\n\r\n    const setScale = (scale) => {\r\n        layoutConfig.scale = scale;\r\n    };\r\n\r\n    const setActiveMenuItem = (item) => {\r\n        layoutConfig.activeMenuItem = item.value || item;\r\n    };\r\n    const onMenuToggle = () => {\r\n        if (layoutConfig.menuMode === 'overlay') {\r\n            layoutState.overlayMenuActive = !layoutState.overlayMenuActive;\r\n        }\r\n\r\n        if (window.innerWidth > 991) {\r\n            layoutState.staticMenuDesktopInactive = !layoutState.staticMenuDesktopInactive;\r\n        } else {\r\n            layoutState.staticMenuMobileActive = !layoutState.staticMenuMobileActive;\r\n        }\r\n\r\n    };\r\n\r\n    const isSidebarActive = computed(() => layoutState.overlayMenuActive || layoutState.staticMenuMobileActive);\r\n\r\n    const isDarkTheme = computed(() => layoutConfig.darkTheme);\r\n    return { contextPath, layoutConfig: toRefs(layoutConfig), layoutState: toRefs(layoutState), changeThemeSettings, setScale, onMenuToggle, isSidebarActive, isDarkTheme, setActiveMenuItem };\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,KAAK;AAEhD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB;AAChD,MAAMC,YAAY,GAAGN,QAAQ,CAAC;EAC1BO,MAAM,EAAE,KAAK;EACbC,SAAS,EAAEC,MAAM,CAACC,UAAU,CAAC,6BAA6B,CAAC,CAACC,OAAO;EACnEC,UAAU,EAAE,UAAU;EACtBC,QAAQ,EAAE,QAAQ;EAClBC,KAAK,EAAEL,MAAM,CAACC,UAAU,CAAC,6BAA6B,CAAC,CAACC,OAAO,GAAG,kBAAkB,GAAG,mBAAmB;EAC1GI,KAAK,EAAE,EAAE;EACTC,cAAc,EAAE,IAAI;EACpBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGlB,QAAQ,CAAC;EACzBmB,yBAAyB,EAAE,KAAK;EAChCC,iBAAiB,EAAE,KAAK;EACxBC,qBAAqB,EAAE,KAAK;EAC5BC,oBAAoB,EAAE,KAAK;EAC3BC,sBAAsB,EAAE,KAAK;EAC7BC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,OAAO,SAASC,SAAS,GAAG;EACxB,MAAMC,mBAAmB,GAAG,CAACZ,KAAK,EAAEN,SAAS,KAAK;IAC9CF,YAAY,CAACE,SAAS,GAAGA,SAAS;IAClCF,YAAY,CAACQ,KAAK,GAAGA,KAAK;EAC9B,CAAC;EAED,MAAMa,QAAQ,GAAIZ,KAAK,IAAK;IACxBT,YAAY,CAACS,KAAK,GAAGA,KAAK;EAC9B,CAAC;EAED,MAAMa,iBAAiB,GAAIC,IAAI,IAAK;IAChCvB,YAAY,CAACU,cAAc,GAAGa,IAAI,CAACC,KAAK,IAAID,IAAI;EACpD,CAAC;EACD,MAAME,YAAY,GAAG,MAAM;IACvB,IAAIzB,YAAY,CAACO,QAAQ,KAAK,SAAS,EAAE;MACrCK,WAAW,CAACE,iBAAiB,GAAG,CAACF,WAAW,CAACE,iBAAiB;IAClE;IAEA,IAAIX,MAAM,CAACuB,UAAU,GAAG,GAAG,EAAE;MACzBd,WAAW,CAACC,yBAAyB,GAAG,CAACD,WAAW,CAACC,yBAAyB;IAClF,CAAC,MAAM;MACHD,WAAW,CAACK,sBAAsB,GAAG,CAACL,WAAW,CAACK,sBAAsB;IAC5E;EAEJ,CAAC;EAED,MAAMU,eAAe,GAAGhC,QAAQ,CAAC,MAAMiB,WAAW,CAACE,iBAAiB,IAAIF,WAAW,CAACK,sBAAsB,CAAC;EAE3G,MAAMW,WAAW,GAAGjC,QAAQ,CAAC,MAAMK,YAAY,CAACE,SAAS,CAAC;EAC1D,OAAO;IAAEN,WAAW;IAAEI,YAAY,EAAEP,MAAM,CAACO,YAAY,CAAC;IAAEY,WAAW,EAAEnB,MAAM,CAACmB,WAAW,CAAC;IAAEQ,mBAAmB;IAAEC,QAAQ;IAAEI,YAAY;IAAEE,eAAe;IAAEC,WAAW;IAAEN;EAAkB,CAAC;AAC9L"},"metadata":{},"sourceType":"module","externalDependencies":[]}