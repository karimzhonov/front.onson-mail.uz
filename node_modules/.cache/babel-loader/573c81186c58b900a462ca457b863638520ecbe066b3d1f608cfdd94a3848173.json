{"ast":null,"code":"import { openBlock, createElementBlock, renderSlot, createCommentVNode } from 'vue';\nvar script = {\n  name: 'DeferredContent',\n  emits: ['load'],\n  data() {\n    return {\n      loaded: false\n    };\n  },\n  mounted() {\n    if (!this.loaded) {\n      if (this.shouldLoad()) this.load();else this.bindScrollListener();\n    }\n  },\n  beforeUnmount() {\n    this.unbindScrollListener();\n  },\n  methods: {\n    bindScrollListener() {\n      this.documentScrollListener = () => {\n        if (this.shouldLoad()) {\n          this.load();\n          this.unbindScrollListener();\n        }\n      };\n      window.addEventListener('scroll', this.documentScrollListener);\n    },\n    unbindScrollListener() {\n      if (this.documentScrollListener) {\n        window.removeEventListener('scroll', this.documentScrollListener);\n        this.documentScrollListener = null;\n      }\n    },\n    shouldLoad() {\n      if (this.loaded) {\n        return false;\n      } else {\n        const rect = this.$refs.container.getBoundingClientRect();\n        const docElement = document.documentElement;\n        const winHeight = docElement.clientHeight;\n        return winHeight >= rect.top;\n      }\n    },\n    load(event) {\n      this.loaded = true;\n      this.$emit('load', event);\n    }\n  }\n};\nconst _hoisted_1 = {\n  ref: \"container\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [$data.loaded ? renderSlot(_ctx.$slots, \"default\", {\n    key: 0\n  }) : createCommentVNode(\"\", true)], 512);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["openBlock","createElementBlock","renderSlot","createCommentVNode","script","name","emits","data","loaded","mounted","shouldLoad","load","bindScrollListener","beforeUnmount","unbindScrollListener","methods","documentScrollListener","window","addEventListener","removeEventListener","rect","$refs","container","getBoundingClientRect","docElement","document","documentElement","winHeight","clientHeight","top","event","$emit","_hoisted_1","ref","render","_ctx","_cache","$props","$setup","$data","$options","$slots","key","default"],"sources":["/node_modules/primevue/deferredcontent/deferredcontent.esm.js"],"sourcesContent":["import { openBlock, createElementBlock, renderSlot, createCommentVNode } from 'vue';\n\nvar script = {\n    name: 'DeferredContent',\n    emits: ['load'],\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n\nconst _hoisted_1 = { ref: \"container\" };\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", _hoisted_1, [\n    ($data.loaded)\n      ? renderSlot(_ctx.$slots, \"default\", { key: 0 })\n      : createCommentVNode(\"\", true)\n  ], 512))\n}\n\nscript.render = render;\n\nexport { script as default };\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,kBAAkB,QAAQ,KAAK;AAEnF,IAAIC,MAAM,GAAG;EACTC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,IAAI,GAAG;IACH,OAAO;MACHC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAAC,IAAI,CAACD,MAAM,EAAE;MACd,IAAI,IAAI,CAACE,UAAU,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,CAAC,KAC9B,IAAI,CAACC,kBAAkB,EAAE;IAClC;EACJ,CAAC;EACDC,aAAa,GAAG;IACZ,IAAI,CAACC,oBAAoB,EAAE;EAC/B,CAAC;EACDC,OAAO,EAAE;IACLH,kBAAkB,GAAG;MACjB,IAAI,CAACI,sBAAsB,GAAG,MAAM;QAChC,IAAI,IAAI,CAACN,UAAU,EAAE,EAAE;UACnB,IAAI,CAACC,IAAI,EAAE;UACX,IAAI,CAACG,oBAAoB,EAAE;QAC/B;MACJ,CAAC;MAEDG,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACF,sBAAsB,CAAC;IAClE,CAAC;IACDF,oBAAoB,GAAG;MACnB,IAAI,IAAI,CAACE,sBAAsB,EAAE;QAC7BC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACH,sBAAsB,CAAC;QACjE,IAAI,CAACA,sBAAsB,GAAG,IAAI;MACtC;IACJ,CAAC;IACDN,UAAU,GAAG;MACT,IAAI,IAAI,CAACF,MAAM,EAAE;QACb,OAAO,KAAK;MAChB,CAAC,MAAM;QACH,MAAMY,IAAI,GAAG,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,qBAAqB,EAAE;QACzD,MAAMC,UAAU,GAAGC,QAAQ,CAACC,eAAe;QAC3C,MAAMC,SAAS,GAAGH,UAAU,CAACI,YAAY;QAEzC,OAAOD,SAAS,IAAIP,IAAI,CAACS,GAAG;MAChC;IACJ,CAAC;IACDlB,IAAI,CAACmB,KAAK,EAAE;MACR,IAAI,CAACtB,MAAM,GAAG,IAAI;MAClB,IAAI,CAACuB,KAAK,CAAC,MAAM,EAAED,KAAK,CAAC;IAC7B;EACJ;AACJ,CAAC;AAED,MAAME,UAAU,GAAG;EAAEC,GAAG,EAAE;AAAY,CAAC;AAEvC,SAASC,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAC7D,OAAQxC,SAAS,EAAE,EAAEC,kBAAkB,CAAC,KAAK,EAAE+B,UAAU,EAAE,CACxDO,KAAK,CAAC/B,MAAM,GACTN,UAAU,CAACiC,IAAI,CAACM,MAAM,EAAE,SAAS,EAAE;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC,GAC9CvC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,CACjC,EAAE,GAAG,CAAC;AACT;AAEAC,MAAM,CAAC8B,MAAM,GAAGA,MAAM;AAEtB,SAAS9B,MAAM,IAAIuC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}